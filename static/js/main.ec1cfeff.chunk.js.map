{"version":3,"sources":["containers/FullPost/FullPost.module.css","components/Nav/Navigation.module.css","components/Post/Post.module.css","App.module.css","containers/Posts/Posts.module.css","components/FavPosts/FavPosts.module.css","components/Comment/Comment.module.css","components/FavComments/FavComments.module.css","components/Nav/Navigation.js","components/Post/Post.js","containers/Posts/Posts.js","store/actionTypes.js","containers/FullPost/FullPost.js","components/FavPosts/FavPosts.js","components/Comment/Comment.js","components/FavComments/FavComments.js","App.js","store/actionCreators.js","store/reducer.js","index.js"],"names":["module","exports","Navigation","props","useState","humbState","setHumbState","humbGone","className","classes","mainHeader","humb","humbOn","humbOff","onClick","state","Open","Close","to","exact","post","Post","move","clicked","title","Posts","List","useSelector","blog","posts","RedError","error","RedLoad","load","style","textAlign","map","id","history","push","STORE_RESULT","TOGGLE_FAV","TOGGLE_COMMENT_TO_FAV","FullPost","console","log","setError","commentsList","setCommentsList","dispatch","useDispatch","filter","Number","match","params","postId","postItem","favComments","commentsFav","useEffect","fetch","method","headers","then","res","ok","json","Error","statusText","catch","err","comments","comment","isFav","findIndex","fav","name","body","email","Fav","NoFav","type","actionTypes","favCommentClick","Fragment","CommentArea","FavPosts","noContent","length","favPosts","Comment","FavComments","App","changeRes","element","result","basename","path","component","initialState","loaded","reducer","action","concat","postIndex","p","newFavStatus","updatedPost","favIndex","splice","rootReducer","combineReducers","dataReducer","store","createStore","applyMiddleware","ReduxThunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ec1cfeff.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"FullPost\":\"FullPost_FullPost__3gsKY\",\"CommentArea\":\"FullPost_CommentArea__1zaf2\",\"Fav\":\"FullPost_Fav__nT20o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainHeader\":\"Navigation_mainHeader__3J81_\",\"Open\":\"Navigation_Open__3Bxi8\",\"Close\":\"Navigation_Close__pmotA\",\"active\":\"Navigation_active__1g7Ck\",\"humb\":\"Navigation_humb__IQkfH\",\"humbOn\":\"Navigation_humbOn__oIBv6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Post\":\"Post_Post__2uao7\",\"move\":\"Post_move__3J65m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Posts\":\"Posts_Posts__2MvyW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FavPosts\":\"FavPosts_FavPosts__EdoR9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Comment\":\"Comment_Comment__PW1S3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FavComments\":\"FavComments_FavComments__xbd15\"};","import React , {useState} from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport classes from \"./Navigation.module.css\";\n\nconst Navigation = (props) => {\n\n  const [humbState, setHumbState] = useState(false)\n  \n  const humbMove = () => {\n    setHumbState(state => !state)\n  }\n\n  const humbGone = () => {\n    setHumbState(false);\n  }\n\n\n  return (\n    <header className={classes.mainHeader}>\n     <div className={`${classes.humb} ${humbState ? classes.humbOn : classes.humbOff}`} onClick={humbMove}>\n          <div></div>\n          <div></div>\n          <div></div>\n        </div>\n      <nav className={`${humbState ? classes.Open : classes.Close}`}>\n       \n        <ul>\n          <li>\n            <NavLink to=\"/\" exact onClick={humbGone}>\n              All Posts\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/favoritesposts\" onClick={humbGone}>Favorites Posts</NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/favoritescomments\" onClick={humbGone}>Favorites Comments</NavLink>\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default Navigation;\n","import React from \"react\";\n\nimport classes from \"./Post.module.css\";\n\nconst post = (props) => {\n  \n\n  return (\n    <article\n      className={`${classes.Post} ${classes.move} move`}\n      onClick={props.clicked}\n    \n      \n    >\n      <h1>{props.title}</h1>\n    </article>\n  );\n};\n\nexport default post;\n","import React from \"react\";\n\nimport Post from \"../../components/Post/Post\";\n\nimport { useSelector} from \"react-redux\";\n\n\n\nimport classes from \"./Posts.module.css\";\n\nconst Posts = (props) => {\n  const List = useSelector((state) => state.blog.posts);\n  const RedError = useSelector((state) => state.blog.error);\n  const RedLoad = useSelector((state) => state.blog.load);\n\n  const postSelectedHandler = (id) => {\n    props.history.push(\"/posts/\" + id);\n  };\n\n  let posts = <p style={{ textAlign: \"center\" }}>Post are downloading pleace wait...</p>;\n\n  if (RedError) {\n    posts = (\n      <p style={{ textAlign: \"center\" }}>something is wrong we had an Error</p>\n    );\n  }\n\n  if (!RedError && RedLoad) {\n    posts = List.map((post) => {\n      return (\n        <Post\n          key={post.id}\n          title={post.title}\n          clicked={() => postSelectedHandler(post.id)}\n        />\n      );\n    });\n  }\n\n  return (\n    <div>\n      <section className={classes.Posts}>{posts}</section>\n    </div>\n  );\n};\n\nexport default Posts;\n","\nexport const STORE_RESULT = 'STORE_RESULT';\nexport const TOGGLE_FAV = 'TOGGLE_FAV';\nexport const TOGGLE_COMMENT_TO_FAV = 'TOGGLE_COMMENT_TO_FAV';","import React, { useState, useEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport * as actionTypes from \"../../store/actionTypes\";\n\nimport classes from \"./FullPost.module.css\";\n\nconst FullPost = (props) => {\n  console.log(\"FullPost\", props);\n  const [error, setError] = useState(null);\n  const [commentsList, setCommentsList] = useState(null);\n\n  const dispatch = useDispatch();\n\n  const [postItem] = useSelector(state =>\n    \n      state.blog.posts.filter(post => post.id === Number(props.match.params.postId))\n  );\n\n  console.log(postItem);\n\n  const favComments = useSelector((state) => state.blog.commentsFav);\n\n  useEffect(() => {\n    fetch(\n      `https://jsonplaceholder.typicode.com/posts/${props.match.params.postId}/comments`,\n      {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    )\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        } else {\n          throw Error(res.statusText);\n        }\n      })\n      .then((res) => {\n        setCommentsList(res);\n      })\n      .catch((err) => {\n        setError(true);\n      });\n    // eslint-disable-next-line\n  }, []);\n\n  const favPostClick = () => {\n    dispatch({\n      type: actionTypes.TOGGLE_FAV,\n      id: postItem.id,\n    });\n  };\n\n  const favCommentClick = (comment) => {\n    dispatch({\n      type: actionTypes.TOGGLE_COMMENT_TO_FAV,\n      comment: comment,\n    });\n  };\n\n  let post = 'Loading';/*<Redirect to=\"/\" />;*/\n\n  let comments = [];\n  if (commentsList) {\n    comments = commentsList.map((comment) => {\n      const isFav = favComments.findIndex((fav) => fav.id === comment.id) > -1;\n\n      return (\n        <div key={comment.id} className={classes.FullPost}>\n          <h3>{comment.name}</h3>\n          <p>{comment.body}</p>\n          <small>{comment.email}</small>\n          <button\n            className={isFav ? classes.Fav : classes.NoFav}\n            onClick={() => favCommentClick(comment)}\n          >\n            {isFav ? \"Remove from Favorites\" : \"Add to Favorites\"}\n          </button>\n        </div>\n      );\n    });\n  }\n\n  if (postItem) {\n    post = (\n      <React.Fragment>\n        <div className={classes.FullPost}>\n          <h1>{postItem.title}</h1>\n          <p>{postItem.body}</p>\n          <button\n            className={postItem.fav ? classes.Fav : classes.NoFav}\n            onClick={favPostClick}\n          >\n            {postItem.fav ? \"Remove from Favorites\" : \"Add to Favorites\"}\n          </button>\n        </div>\n        <div className={classes.CommentArea}>\n          <h2>Comment List</h2>\n          {error\n            ? \"Comments are not loaded...\"\n            : commentsList\n            ? comments\n            : \"Comments are loading...\"}\n        </div>\n      </React.Fragment>\n    );\n  }\n  return post;\n};\n\nexport default FullPost;\n","import React from \"react\";\n\nimport Post from \"../Post/Post\";\n\nimport { useSelector } from \"react-redux\";\n\nimport classes from \"./FavPosts.module.css\";\n\nconst FavPosts = (props) => {\n  const List = useSelector((state) => state.blog.posts.filter(post => post.fav));\n\n  const postSelectedHandler = (id) => {\n    props.history.push(\"/posts/\" + id);\n  };\n\n  let noContent = false;\n\n  if (List.length === 0 ) {\n    noContent = true;\n  }\n\n  const favPosts = List.map((post) => {\n    return (\n      <Post\n        key={post.id}\n        title={post.title}\n        clicked={() => postSelectedHandler(post.id)}\n      />\n    );\n  });\n\n  return (\n    <div>\n      <section className={classes.FavPosts}>{favPosts}</section>\n      <h1>{noContent && 'No Favorites yet...'}</h1>\n    </div>\n  );\n};\n\nexport default FavPosts;\n","import React from \"react\";\n\nimport classes from \"./Comment.module.css\";\n\nconst Comment = (props) => (\n  <article className={classes.Comment}>\n    <h1>{props.title}</h1>\n    <p>{props.body}</p>\n    <small>{props.email}</small>\n  </article>\n);\n\nexport default Comment;\n","import React from \"react\";\n\nimport Comment from \"../Comment/Comment\";\n\nimport { useSelector } from \"react-redux\";\n\nimport classes from \"./FavComments.module.css\";\n\nconst FavComments = (props) => {\n  const List = useSelector((state) => state.blog.commentsFav);\n\n  let noContent = false;\n\n  if (List.length === 0 ) {\n    noContent = true;\n  }\n\n  const favComments = List.map((comment) => {\n    return (\n      <Comment\n        key={comment.id}\n        title={comment.name}\n        body={comment.body}\n        email={comment.email}\n        \n      />\n    );\n  });\n\n  return (\n    <div>\n      <section className={classes.FavComments}>{favComments}</section>\n      <h1>{noContent && 'No Favorites yet...'}</h1>\n    </div>\n  );\n};\n\nexport default FavComments;","import React, { useEffect } from \"react\";\n\nimport { HashRouter } from \"react-router-dom\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport classes from \"./App.module.css\";\n\nimport Navigation from \"./components/Nav/Navigation\";\nimport Posts from \"./containers/Posts/Posts\";\nimport FullPost from \"./containers/FullPost/FullPost\";\nimport FavPosts from \"./components/FavPosts/FavPosts\";\nimport FavComments from \"./components/FavComments/FavComments\";\n\nimport { useDispatch } from \"react-redux\";\n\nimport * as actionsCreators from \"./store/actionCreators\";\n\nconst App = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(actionsCreators.FetchData());\n    // eslint-disable-next-line\n  }, []);\n\n\n  return (\n    <HashRouter basename=\"/\">\n      <div className={classes.App}>\n        <Navigation></Navigation>\n        <main>\n          <Switch>\n            <Route path={\"/posts/:postId\"} exact component={FullPost} />\n\n            <Route path=\"/favoritesposts\" component={FavPosts} />\n            <Route path=\"/favoritescomments\" component={FavComments} />\n\n            <Route path=\"/\" exact component={Posts} />\n          </Switch>\n        </main>\n      </div>\n    </HashRouter>\n  );\n};\n\nexport default App;\n","import * as actionTypes from \"./actionTypes\";\n\nexport const FetchData = () => {\n  console.log(\"fetch\");\n  return (dispatch) => {\n    fetch(\"https://jsonplaceholder.typicode.com/posts\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        } else {\n          throw Error(res.statusText);\n        }\n      })\n      .then((res) => {\n        const changeRes = res.map((element) => {\n          element.fav = false;\n          return element;\n        });\n\n        dispatch({\n          type: actionTypes.STORE_RESULT,\n          result: changeRes,\n          error: false,\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n        dispatch({\n          type: actionTypes.STORE_RESULT,\n          result: err,\n          error: true,\n        });\n      });\n  };\n};\n","import * as actionTypes from \"./actionTypes\";\n\nconst initialState = {\n  posts: [],\n  commentsFav: [],\n  loaded: false,\n  error: null,\n  load: false,\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.STORE_RESULT: {\n      if (!state.loaded && !action.error) {\n        return {\n          ...state,\n          posts: state.posts.concat(action.result),\n          loaded: true,\n          load: true,\n          error: false,\n        };\n      } else if (action.error) {\n        return {\n          ...state,\n          loaded: false,\n          error: true,\n          load: true,\n        };\n      } else {\n        return state;\n      }\n    }\n\n    case actionTypes.TOGGLE_FAV:\n      const postIndex = state.posts.findIndex((p) => p.id === action.id);\n\n      const newFavStatus = !state.posts[postIndex].fav;\n      const updatedPost = [...state.posts];\n      updatedPost[postIndex] = {\n        ...state.posts[postIndex],\n        fav: newFavStatus,\n      };\n      return {\n        ...state,\n        posts: updatedPost,\n      };\n\n    case actionTypes.TOGGLE_COMMENT_TO_FAV:\n      if (\n        state.commentsFav.findIndex(\n          (element) => element.id === action.comment.id\n        ) === -1\n      ) {\n        const favComments = [...state.commentsFav];\n        favComments.push(action.comment);\n\n        return {\n          ...state,\n          commentsFav: favComments,\n        };\n      } else {\n        let favComments = [...state.commentsFav];\n        const favIndex = state.commentsFav.findIndex(\n          (comment) => comment.id === action.comment.id\n        );\n\n        favComments.splice(favIndex, 1);\n\n        return {\n          ...state,\n          commentsFav: favComments,\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport ReduxThunk from 'redux-thunk';\n\nimport dataReducer from \"./store/reducer\";\n\nimport { Provider } from \"react-redux\";\nimport { combineReducers, createStore, applyMiddleware  } from \"redux\";\n\n\nconst rootReducer = combineReducers({\n  blog: dataReducer,\n});\n\nconst store = createStore(rootReducer, applyMiddleware(ReduxThunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}